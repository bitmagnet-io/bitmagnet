name: default
actions:
  # the first step is run only for torrents without a hinted content type:
  - if_else:
      condition: "result.contentType == contentType.unknown"
      if_action:
        find_match:
          # match audiobooks:
          - if_else:
              condition:
                and:
                  - "torrent.files.map(f, f.fileType == fileType.audio ? f.size : - f.size).sum() > 50*mb"
                  - or:
                      - "torrent.name.matches(keywords.audiobook)"
                      - "torrent.files.filter(f, f.extension in extensions.audiobook).size() > 0"
              if_action:
                set_content_type: audiobook
              else_action: no_match
          # match comics:
          - if_else:
              condition: "torrent.files.map(f, f.extension in extensions.comic ? f.size : - f.size).sum() > 0"
              if_action:
                set_content_type: comic
              else_action: no_match
          # match ebooks:
          - if_else:
              condition: "torrent.files.map(f, f.extension in extensions.ebook ? f.size : - f.size).sum() > 0"
              if_action:
                set_content_type: ebook
              else_action: no_match
          # match music:
          - if_else:
              condition:
                or:
                  - "torrent.files.map(f, f.extension in extensions.music ? f.size : - f.size).sum() > 0"
                  - and:
                      - "torrent.name.matches(keywords.music)"
                      - "torrent.files.map(f, f.fileType == fileType.audio ? f.size : - f.size).sum() > 0"
              if_action:
                set_content_type: music
              else_action: no_match
          # match software:
          - if_else:
              condition: "torrent.files.map(f, f.fileType == fileType.software ? f.size : - f.size).sum() > 0"
              if_action:
                set_content_type: software
              else_action: no_match
          # match xxx:
          - if_else:
              condition: "([torrent.name] + torrent.files.map(f, f.path)).join(' ').matches(keywords.xxx)"
              if_action:
                set_content_type: xxx
              else_action: no_match
          # exit the find_match without failing:
          - noop
  # next, if we know a content ID that isn't already attached, try to attach it from the local `content` table:
  - if_else:
      condition: "torrent.hasHintedContentId && !result.hasAttachedContent"
      if_action:
        find_match:
          - attach_local_content_by_id
          - noop
  # the next step covers video-based content types:
  - if_else:
      condition:
        or:
          - "result.contentType in [contentType.movie, contentType.tv_show]"
          - "torrent.files.map(f, f.fileType == fileType.video ? f.size : - f.size).sum() > 100*mb"
      if_action:
        find_match:
          -
            # parse video-related attributes from the torrent name;
            # if the content type wasn't previously specified and the name format doesn't suggest a movie or TV show, a "no match" will be returned:
            - parse_video_content
          # exit the find_match without failing:
          - noop
#  - if_else:
#      condition: "result.contentType in [contentType.xxx]"
#      if_action: delete
extensions:
  audiobook:
    - m4b
  comic:
    - cb7
    - cba
    - cbr
    - cbt
    - cbz
  ebook:
    - azw
    - azw3
    - azw4
    - azw8
    - chm
    - doc
    - docx
    - djvu
    - epub
    - lit
    - mobi
    - odt
    - pdf
    - rtf
  music:
    - ape
    - flac
  software:
    - apk
    - app
    - bat
    - bin
    - deb
    - dll
    - dmg
    - exe
    - jar
    - lua
    - msi
    - package
    - pkg
    - rpm
    - sh
keywords:
  audiobook:
    - audiobook
    - audiobooks
    - book
    - books
    - abridged
    - unabridged
    - narrated
  music:
    - discography
    - music
    - album
    - va
    - various
    - compilation
    - ep
    - lp
    - single
    - vinyl
    - classical
    - disco
    - folk
    - hits
    - house
    - indie
    - jazz
    - metal
    - pop
    - jazz
    - reggae
    - rock
    - trance
  xxx:
    - porn
    - xxx
