// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// ServarrDownloadClientClientMutation includes the requested fields of the GraphQL type ClientMutation.
type ServarrDownloadClientClientMutation struct {
	Download string `json:"download"`
}

// GetDownload returns ServarrDownloadClientClientMutation.Download, and is useful for accessing the field via an interface.
func (v *ServarrDownloadClientClientMutation) GetDownload() string { return v.Download }

// ServarrDownloadResponse is returned by ServarrDownload on success.
type ServarrDownloadResponse struct {
	Client ServarrDownloadClientClientMutation `json:"client"`
}

// GetClient returns ServarrDownloadResponse.Client, and is useful for accessing the field via an interface.
func (v *ServarrDownloadResponse) GetClient() ServarrDownloadClientClientMutation { return v.Client }

// __ServarrDownloadInput is used internally by genqlient
type __ServarrDownloadInput struct {
	InfoHashes []string `json:"infoHashes"`
}

// GetInfoHashes returns __ServarrDownloadInput.InfoHashes, and is useful for accessing the field via an interface.
func (v *__ServarrDownloadInput) GetInfoHashes() []string { return v.InfoHashes }

// The query or mutation executed by ServarrDownload.
const ServarrDownload_Operation = `
mutation ServarrDownload ($infoHashes: [Hash20!]) {
	client {
		download(infoHashes: $infoHashes)
	}
}
`

func ServarrDownload(
	ctx_ context.Context,
	client_ graphql.Client,
	infoHashes []string,
) (*ServarrDownloadResponse, error) {
	req_ := &graphql.Request{
		OpName: "ServarrDownload",
		Query:  ServarrDownload_Operation,
		Variables: &__ServarrDownloadInput{
			InfoHashes: infoHashes,
		},
	}
	var err_ error

	var data_ ServarrDownloadResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
